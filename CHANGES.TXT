release 1.68:

- optimized MMX renderer one more time
- added new "compiler" pipeline
- fixed bug on CALL NC,dddd

release 1.67:

- now ALL the opcodes are in new pipe

release 1.66:

- put a lot of opcodes in the new pipe

release 1.65:

- optimized MMX renderer again

release 1.64:

- fixed disk-patchs, but msx-dos still doesn't work
- fixed logo borders

release 1.63:

- optimized MMX renderer
- added LD SP,IX
- pause on F12: stop Z80, change palette and show logo

release 1.62:

- new MMX graphics renderer (25% speed gain)

release 1.61: [*] public version

- fixed bug on writememw: now the intro of Super Laydock works
- fixed bug on readmemw

release 1.60:

- fixed bug on 16-bit ADC and SBC 
  stupid bug! it was not V flag after all, 
  the incorrect flag was the Z flag!!!
  now Zanac starts fine, and F1 Spirit
  doesn't have those graphics bugs.

release 1.59:

- added video cache for 256x200 mode

release 1.58:

- optimized base address evaluation
- added support to EC bit (sprite horizontal shifter)

release 1.57:

- fixed yet another bug on new graphics pipeline
  now the vram is segmented in 64 bytes blocks
- added a help page

release 1.56:

- fixed bug on new graphics pipeline

release 1.55:

- new pipeline for block screen updates

release 1.54:

- new, improved FETCH1 and FETCHW1 macro

release 1.53:

- histogram evaluation
- superscalar extensions

release 1.52:

- removed the "clockcounter" variable: 
  now ebp decreases instead of increase
  this saved more than two clocks in all opcodes!

release 1.51:

- optimized a lot of opcodes

release 1.50:

- optimized the sprite check in block mode
- added new "fetchw1" routine: another clock cycle saved
- added new "readmemw" and "writememw": a lot of clocks saved!
- optimized PUSH, CALL, POP and RET

release 1.49:

- fixed bug on ADC and SBC (8-bit): they weren't setting V flag correctly
- optimized "EMULATE" macro
- added new "fetch1" routine: this should save 1 clock for each opcode
- optimized yet again the screen 2 renderer: now even penguin adv.
  and the nemesis are very fast.

release 1.48:

- dynamic CPU optimizer: auto-detect konami end-of-interrupt

release 1.47:

- now the numeric display averages 10 samples and has three digits
- fixed bugs on screen 2 block renderer
- moved blit code from IO.ASM to BLIT.ASM

release 1.46:

- added a new, super-fast, block-based renderer for screen 2

release 1.45:

- added a new, super-fast, block-based renderer for screen 1

release 1.44:

- fixed undocument flag affection for CP opcodes
- optimized JR and JRCC
- moved gui code from IO.ASM to GUI.ASM
- added a new bar graph 
  1st bar: z80 emulation
  2nd bar: screen renderer
  3rd bar: sprite renderer
  4th bar: blitting time
  5th bar: overhead of bar graph

release 1.43:

- added a message line at the bottom of debugger screen
- added some pentium profiling options

release 1.42:

- added save/load machine state
  keys: "A" for save and "L" for load

release 1.41: [*] public version

- added yet more extensions to the debugger
- fixed bug on numeric display, now it uses color 4 instead of color 0
- optimized CALL dddd a little

release 1.40:

- added more extensions to the debugger

release 1.39:

- added a numeric display in the bar graph
- now only the mode fast check for interrupts before the synch
  with this, emulation get faster in modes normal and turbo
  and mode normal should have no bugs when run in very slow machines
- added a new, improved debugger

release 1.38: [*] public version

- added a bar graph to display emulator performance
  1st bar: z80 emulation
  2nd bar: screen renderer+sprite renderer
  3rd bar: blitting time
  4th bar: overhead of bar graph
  key "G" turns on/off the bar graph

release 1.37: [*] public version

- put a protection on the options that requires a pentium
- now brmsx estimate the clock speed of the processor in startup

release 1.36:

- added a tweaked-vga mode to do 256x200 resolution;
  with this, the msx screen uses almost all the monitor area,
  and as a bonus we get another 19% in speed gain,
  in all the screens!!
- added a new debug key: "V" - changes the resolution 
  available now are 320x200 and 256x200
  default is 320x200
- disabled "K" key since it is not working yet
- optimized again the screen 0 renderer: speed gain is 10%

release 1.35:

- did more optimization on screen 2 renderer
- added info screen: free low/high memory and cpu type

release 1.34:

- optimized the screen 0 renderer: speed gain is 1.8%
- renamed debug command from "V" to "0"
- added clock counter in command "1"
- optimized the screen 1 renderer: speed gain is 22%

release 1.33:

- optimized JP cc,dddd
- optimized AND rr/nn
- optimized the initialization of "emulate"
- optimized JR dd
- optimized OR (HL)
- optimized ADC A,(II+DD)
- optimized the screen 2 renderer: speed gain is 21%
- now brmsx has two executables: one for DOS and one for windows

release 1.32:

- optimized LDI
- added 1 waitstate for each instruction 
  now everything should run at correct speed
- added SRL (HL)
- aaargh: "clockcounter" was not dword-aligned
  now the emulation should be faster

release 1.31:

- added pseudo-support for megarom mode-5 (ascii 16kb) 
- added new debug key "K" to switch between megarom modes
- now an error in emulation will generate an interrupt
  this will make emulation about 5% faster since
  the error checking is done outside the main loop  
- optimized CP opcode

release 1.30: [*] public version

- added IN reg,(C)
- fixed major bug on IN A,(dd), no one told me this opcode sets the flags!!
  now the intro of Zanac runs fine and the speed in all the megarom are
  improved

release 1.29:

- added three levels of synchronization:
  NORMAL MODE: synchronizes on every interrupt
  FAST MODE: does not synchronize, but ints are still generated at 60 Hz
  TURBO MODE: ints are generated at more than 60 Hz
  "M" key switches between the modes
- removed useless debug commands: X, P, K
- added EX (SP),IX -> now Animal Basket is playable

release 1.28:

- new unificated "emulate" pipeline
- msxvram is now allocated in real time, it reduces the executable size
  and will make life easier when I'll implement msx2 emulation
- fixed timing of automatic opcodes  
- RETI does not enable interrupts now, because of this megarom games 
  doesn't lock anymore

release 1.27:

- changed the memory model to 8k banks instead of 16k banks
- now the bank switch is also done on the "slot" variable,
  this way you can change the banks to another slot and then
  back, preserving the megarom bank selectors. With this change
  F1 Spirit now run.
- changed interrupt emulation, now MSX timing has higher priority
  than PC timing. This will slow down emulation on slower machines,
  but it can prevent deadlocks. As a side effect, Nemesis run on 
  correct speed.
- added LD SP,IY instruction

release 1.26:

- fixed timings of instructions in Z80??.ASM
- added synchronization at interrupt-level

release 1.25:

- optimized LD rr,dd
- optimized LD (HL),dd
- sorted OPCODE.INC file
- added RL (II+dd)
- added ADD II,rrw
- fixed timings of instructions on OPCODE.INC
